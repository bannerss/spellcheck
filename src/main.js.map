{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/config.ts","./src/app/course-title/course-title.component.ts","./src/app/course-title/course-title.component.html","./src/app/courses/course-card/course-card.component.ts","./src/app/courses/course-card/course-card.component.html","./src/app/courses/course-image/course-image.component.ts","./src/app/courses/course-image/course-image.component.html","./src/app/courses/courses.module.ts","./src/app/courses/courses.service.ts","./src/app/courses/directives/highlighted.directive.ts","./src/app/courses/directives/ngx-unless.directive.ts","./src/app/courses/filter-by-category.pipe.ts","./src/app/spellcheck/services/dictionary-manager.service.ts","./src/app/spellcheck/spell-check-validator/spell-check-validator.component.ts","./src/app/spellcheck/spell-check-validator/spell-check-validator.component.html","./src/app/spellcheck/spell-check.module.ts","./src/db-data.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {ChangeDetectionStrategy, ChangeDetectorRef, Component, DoCheck, Inject, Injector, OnInit} from '@angular/core';\r\nimport {Course} from './model/course';\r\nimport {Observable} from 'rxjs';\r\nimport {AppConfig, CONFIG_TOKEN} from './config';\r\nimport {COURSES} from '../db-data';\r\nimport {CoursesService} from './courses/courses.service';\r\nimport {createCustomElement} from '@angular/elements';\r\nimport {CourseTitleComponent} from './course-title/course-title.component';\r\nimport { DictionaryManagerService } from './spellcheck/services/dictionary-manager.service';\r\n\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent implements OnInit {\r\n\r\n    courses: Course[] = COURSES;\r\n\r\n    coursesTotal = this.courses.length;\r\n\r\n    constructor(\r\n        private coursesService: CoursesService,\r\n        @Inject(CONFIG_TOKEN) private config: AppConfig,\r\n        private injector: Injector,\r\n       public dictionaryManagerService:DictionaryManagerService) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n        const htmlElement = createCustomElement(CourseTitleComponent, {injector:this.injector});\r\n\r\n        customElements.define('course-title', htmlElement);\r\n\r\n    }\r\n\r\n    onEditCourse() {\r\n\r\n            this.courses[1].category = 'ADVANCED';\r\n\r\n    }\r\n\r\n    save(course: Course) {\r\n        this.coursesService.saveCourse(course)\r\n            .subscribe(\r\n                () => console.log('Course Saved!')\r\n            );\r\n    }\r\n\r\n    public nonWordsArray = [\"ילדד\", \"גרלל\", \"בןן\"];\r\n  txt = \"\";\r\n\r\n  rebuildNonWordsArray(textAreaContent:string){\r\n    if(textAreaContent ){\r\n      let userTextArray:string[] = textAreaContent.split(/[\\s,.]+/).filter(element => element);\r\n      for(let element=0; element<userTextArray.length; element++)\r\n      if(!this.nonWordsArray.includes(userTextArray[element])){\r\n        if(!this.dictionaryManagerService.search(userTextArray[element])){\r\n          this.nonWordsArray.push(userTextArray[element]);\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\n\r\n}\r\n","<div class=\"top-menu\">\r\n\r\n  <img class=\"logo\"\r\n       src=\"https://angular-academy.s3.amazonaws.com/main-logo/main-page-logo-small-hat.png\">\r\n\r\n</div>\r\n\r\n<div>\r\n\r\n  <div class=\"demo\">\r\n\r\n\r\n      <button (click)=\"onEditCourse()\" i18n>Edit Course</button>\r\n\r\n  </div>\r\n\r\n  <div class=\"courses\">\r\n\r\n    <course-card *ngFor=\"let course of  courses  \"\r\n                 (courseChanged)=\"save($event)\"\r\n                 type=\"beginner\"\r\n                 [course]=\"course\">\r\n\r\n      <course-image [src]=\"course.iconUrl\"></course-image>\r\n\r\n    </course-card>\r\n\r\n\r\n  </div>\r\n\r\n  <spell-check-validator [nonWordsArray]=\"nonWordsArray\"></spell-check-validator>\r\n   \r\n    \r\n\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n","import {BrowserModule} from '@angular/platform-browser';\r\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {CoursesModule} from './courses/courses.module';\r\nimport {CourseTitleComponent} from './course-title/course-title.component';\r\nimport { SpellCheckModule } from './spellcheck/spell-check.module';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        CourseTitleComponent\r\n        \r\n    ],\r\n    imports: [\r\n        FormsModule,\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        HttpClientModule,\r\n        CoursesModule,\r\n        SpellCheckModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n\r\n}\r\n","import {InjectionToken} from '@angular/core';\r\n\r\n\r\nexport interface AppConfig {\r\n    apiUrl:string;\r\n    courseCacheSize:number;\r\n}\r\n\r\n\r\nexport const APP_CONFIG:AppConfig = {\r\n    apiUrl: 'http://localhost:9000',\r\n    courseCacheSize: 10\r\n}\r\n\r\n\r\nexport const CONFIG_TOKEN =\r\n    new InjectionToken<AppConfig>('CONFIG_TOKEN',\r\n        {\r\n            providedIn: 'root',\r\n            factory: () => APP_CONFIG\r\n        });","import {Component, CUSTOM_ELEMENTS_SCHEMA, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'course-title',\r\n  templateUrl: './course-title.component.html',\r\n  styleUrls: ['./course-title.component.css']\r\n})\r\nexport class CourseTitleComponent implements OnInit {\r\n\r\n   @Input()\r\n  title:string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\n\r\n<div class=\"course-title\">\r\n\r\n    {{title}}\r\n\r\n</div>","import {\r\n    AfterContentChecked, AfterContentInit, AfterViewChecked, AfterViewInit,\r\n    Attribute,\r\n    ChangeDetectionStrategy,\r\n    ChangeDetectorRef,\r\n    Component, DoCheck,\r\n    EventEmitter,\r\n    Input, OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output\r\n} from '@angular/core';\r\nimport {Course} from '../../model/course';\r\nimport {CoursesService} from '../courses.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'course-card',\r\n    templateUrl: './course-card.component.html',\r\n    styleUrls: ['./course-card.component.css']\r\n})\r\nexport class CourseCardComponent implements  OnInit {\r\n\r\n    @Input()\r\n    course: Course;\r\n\r\n    @Input()\r\n    cardIndex: number;\r\n\r\n    @Output('courseChanged')\r\n    courseEmitter = new EventEmitter<Course>();\r\n\r\n\r\n\r\n\r\n    constructor(private coursesService: CoursesService,\r\n                @Attribute('type') private type: string) {\r\n\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    onTitleChanged(newTitle: string) {\r\n\r\n        this.course.description = newTitle;\r\n\r\n    }\r\n\r\n\r\n    onSaveClicked(description: string) {\r\n\r\n        this.courseEmitter.emit({...this.course, description});\r\n\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"course-card\" *ngIf=\"course\" #container>\r\n\r\n  <div class=\"course-title\">\r\n\r\n      {{ cardIndex || '' + ' ' + course.description }}\r\n\r\n  </div>\r\n\r\n  <ng-content select=\"course-image\"\r\n              *ngIf=\"course.iconUrl\"></ng-content>\r\n\r\n  <div class=\"course-description\">\r\n\r\n    Edit Title: <input #courseTitle [value]=\"course.description\"\r\n                       (keyup)=\"onTitleChanged(courseTitle.value)\">\r\n\r\n  </div>\r\n\r\n  <div class=\"course-category\">\r\n\r\n    <div class=\"category\" i18n>\r\n\r\n        {\r\n            course.category,\r\n            select,\r\n            BEGINNER {Beginner}\r\n            INTERMEDIATE {Intermediate}\r\n            ADVANCED {Advanced}\r\n        }\r\n\r\n    </div>\r\n\r\n\r\n  </div>\r\n\r\n  <button (click)=\"onSaveClicked(courseTitle.value)\">Save Course</button>\r\n\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'course-image',\r\n  templateUrl: './course-image.component.html',\r\n  styleUrls: ['./course-image.component.css']\r\n})\r\nexport class CourseImageComponent implements OnInit {\r\n\r\n  @Input('src')\r\n  imageUrl:string;\r\n\r\n\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<div class=\"course-image\" #courseImage>\r\n\r\n    <img width=\"300\" alt=\"Angular Logo\"\r\n         [src]=\"imageUrl\">\r\n\r\n</div>","import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {CourseCardComponent} from './course-card/course-card.component';\r\nimport {CourseImageComponent} from './course-image/course-image.component';\r\nimport {CoursesService} from './courses.service';\r\nimport {HighlightedDirective} from './directives/highlighted.directive';\r\nimport {NgxUnlessDirective} from './directives/ngx-unless.directive';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport {FilterByCategoryPipe} from './filter-by-category.pipe';\r\nimport {CourseTitleComponent} from '../course-title/course-title.component';\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  declarations: [\r\n      CourseCardComponent,\r\n      CourseImageComponent,\r\n      HighlightedDirective,\r\n      NgxUnlessDirective,\r\n      FilterByCategoryPipe\r\n      \r\n  ],\r\n    exports: [\r\n        CourseCardComponent,\r\n        CourseImageComponent,\r\n        FilterByCategoryPipe\r\n    ],\r\n    providers: [CoursesService],\r\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\r\n})\r\nexport class CoursesModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Course} from '../model/course';\r\nimport {HttpClient, HttpHeaders, HttpParams} from '@angular/common/http';\r\n\r\nlet counter = 0;\r\n\r\n\r\n@Injectable()\r\nexport class CoursesService {\r\n\r\n  id:number;\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n      counter++;\r\n\r\n      this.id = counter;\r\n\r\n\r\n  }\r\n\r\n  loadCourses(): Observable<Course[]> {\r\n\r\n      const params = new HttpParams()\r\n          .set(\"page\", \"1\")\r\n          .set(\"pageSize\", \"10\");\r\n\r\n      return this.http.get<Course[]>('/api/courses', {params});\r\n\r\n  }\r\n\r\n  saveCourse(course:Course) {\r\n      const headers = new HttpHeaders()\r\n          .set(\"X-Auth\", \"userId\");\r\n\r\n      return this.http.put(`/api/courses/${course.id}`,\r\n          course,{headers});\r\n\r\n  }\r\n\r\n\r\n}\r\n","import {Directive, EventEmitter, Host, HostBinding, HostListener, Input, Output} from '@angular/core';\r\nimport {CoursesService} from '../courses.service';\r\n\r\n\r\n@Directive({\r\n    selector: '[highlighted]',\r\n    exportAs: 'hl'\r\n})\r\nexport class HighlightedDirective {\r\n\r\n    @Input('highlighted')\r\n    isHighlighted = false;\r\n\r\n    @Output()\r\n    toggleHighlight = new EventEmitter();\r\n\r\n    constructor(private coursesService: CoursesService) {\r\n\r\n        console.log('coursesService highlighted ' + coursesService.id);\r\n\r\n    }\r\n\r\n    @HostBinding('class.highlighted')\r\n    get cssClasses() {\r\n        return this.isHighlighted;\r\n    }\r\n\r\n    @HostListener('mouseover', ['$event'])\r\n    mouseOver($event) {\r\n\r\n        console.log($event);\r\n\r\n        this.isHighlighted = true;\r\n        this.toggleHighlight.emit(this.isHighlighted);\r\n    }\r\n\r\n    @HostListener('mouseleave')\r\n    mouseLeave() {\r\n        this.isHighlighted = false;\r\n        this.toggleHighlight.emit(this.isHighlighted);\r\n    }\r\n\r\n    toggle() {\r\n        this.isHighlighted = !this.isHighlighted;\r\n        this.toggleHighlight.emit(this.isHighlighted);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import {Directive, Input, TemplateRef, ViewContainerRef} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[ngxUnless]'\r\n})\r\nexport class NgxUnlessDirective {\r\n\r\n  visible = false;\r\n\r\n\r\n  constructor(private templateRef: TemplateRef<any>,\r\n              private viewContainer: ViewContainerRef) {\r\n\r\n\r\n  }\r\n\r\n  @Input()\r\n  set ngxUnless(condition:boolean) {\r\n      if (!condition && !this.visible) {\r\n          this.viewContainer.createEmbeddedView(this.templateRef);\r\n          this.visible = true;\r\n      }\r\n      else if (condition && this.visible) {\r\n          this.viewContainer.clear();\r\n          this.visible = false;\r\n      }\r\n\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {Course} from '../model/course';\r\n\r\n\r\n@Pipe({\r\n    name: 'filterByCategory'\r\n})\r\nexport class FilterByCategoryPipe implements PipeTransform {\r\n\r\n\r\n    transform(courses: Course[], category:string) {\r\n\r\n        console.log('Called transform()');\r\n\r\n        return courses.filter(course => course.category === category);\r\n    }\r\n\r\n}","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DictionaryManagerService  {\n\n  public root:any =  new TrieNode(null);\n  constructor(private http:HttpClient){\n    http.get<any>(\"/api/trie\").subscribe(res=>{\n      if(res&&res.data){\n        if(JSON.stringify(res.data) !== JSON.stringify({}))\n        this.root=res.data;\n      }\n    })\n  }\n  \n  \n  public insert(word:string){\n    let current = this.root\n    // iterate through all the characters of word\n    for(let character  of word ){\n         // if node doesn't have the current character as child, insert it\n         if(current.children[character] === undefined){\n             current.children[character] = new TrieNode(character)\n         }\n        // move down, to insert next character\n        current = current.children[character]  \n    }\n    // mark the last inserted character as end of the word\n    current.isEndOfWord = true;\n    this.updateFile();\n    //this.httpservice.updateTrie(this.root);\n  }\n  bulkInsert(list:string[]){\n    list.forEach(element => {\n      this.insert(element);\n    });\n    this.updateFile();\n  }\n  public populateFromFile(){\n    this.http.get<any>(\"/api/trie/populateFromFile\").subscribe(res=>{\n      if(res&&res.data){\n        if(JSON.stringify(res.data) !== JSON.stringify({}))\n        this.root=res.data;\n      }\n    })\n  }\n  updateFile() {\n    //this.coursesService.saveTrie(this.root);\n  }\n  search(word:string){\n     let current = this.root\n    // iterate through all the characters of word\n    for(let character of word){\n         if(current.children[character] === undefined){\n             // could not find this character in sequence, return false\n             return false\n         }\n        // move down, to match next character\n        current = current.children[character]  \n    }\n     // found all characters, return true if last character is end of a word\n    return current.isEndOfWord\n  }\n\n\n  \n   \n}\n\nclass TrieNode{\n  /**\n   *\n   */\n  constructor(value:any) {\n    this.value=value;\n\n  }\n  value:string='';\n  isEndOfWord:boolean = false // false by default, a green node means this flag is true\n  children: { [key: string]: TrieNode; } = {}\n\n  populateTrieNode(value:string){\n    this.value = value\n    this.isEndOfWord = false // false by default, a green node means this flag is true\n    this.children  = {} // children are stored as Map, where key is the letter and value is a TrieNode for that letter \n  }\n}\n\n\n\n","  import {\n    AfterViewInit,\n    Component,\n    ElementRef,\n    EventEmitter,\n    forwardRef,\n    Input,\n    OnInit,\n    Output,\n    ViewChild\n  } from \"@angular/core\";\n  \nimport { DictionaryManagerService } from \"../services/dictionary-manager.service\";\n  \n  @Component({\n    selector: 'spell-check-validator',\n  templateUrl: './spell-check-validator.component.html',\n  styleUrls: ['./spell-check-validator.component.css']\n  })\n  export class SpellCheckValidatorComponent{\n    textValue: string = \"\";\n    @Input() nonWordsArray: string[] = [];\n    @ViewChild('spellcheckerrorsholder') spellcheckerrorsholder!: ElementRef;\n    typingTimer:any;   //timer identifier\n    doneTypingInterval:number = 1000;\n    constructor(public dictionaryManagerService:DictionaryManagerService) {}\n    \n    handleScroll() {\n     \n    }\n    onTextAreaChange(content:string){\n      clearTimeout(this.typingTimer);\n      this.typingTimer = setTimeout(this.populateNonWordsArray.bind(this,content), this.doneTypingInterval);\n      \n    }\n\n    populateNonWordsArray(txt:string) {\n      if(txt){\n        this.nonWordsArray=[];\n        let userTextArray:string[] = txt.split(/[\\s,.]+/).filter(element => element);\n        for(let element=0; element<userTextArray.length; element++)\n        if(!this.nonWordsArray.includes(userTextArray[element])){\n          if(!this.dictionaryManagerService.search(userTextArray[element])){\n            this.nonWordsArray.push(userTextArray[element]);\n          }\n        }\n        txt = txt ? txt\n        .replace(/\\n$/g, \"\\n\\n\") : '';\n      this.nonWordsArray.forEach(x => {\n        txt = txt\n        .replace(new RegExp(x+'[(?!\\\\s)|(?!,)|(?!.)]|'+x+'$', 'g'), '<mark style=\"border-bottom: 1px solid red;background-color: transparent;\" class=\"mark\">$&</mark>');\n        });\n      this.spellcheckerrorsholder.nativeElement.innerHTML = txt;\n      }\n    }\n\n    applyHighlights(text:string) {\n      \n       \n      \n      \n    }\n    createTrie(){\n    \n    //const trie = this.dictionaryManagerService;\n     // trie.populateFromFile();\n    // insert few words\n    //trie.insert(\"CAT\");\n    //trie.insert(\"DOG\");\n    //trie.insert(\"CATS\");\n    //trie.insert(\"FISH\");\n\n    // search something\n   // trie.search(\"MAT\") // false\n   // trie.search(\"DOG\") // true  \n    }\n  }\n  ","<div class=\"container\">\n    <div #backdrop class=\"backdrop\">\n      <div #spellcheckerrorsholder class=\"highlights\" ></div>\n    </div>\n    <textarea\n    (ngModelChange)=\"onTextAreaChange($event)\"\n    [ngModel]=\"textValue\"\n      (scroll)=\"handleScroll()\"\n      #textarea\n    ></textarea>\n  </div>\n  <div>\n      <button (click)=\"createTrie()\">createTrie</button>\n  </div>","import { CommonModule } from \"@angular/common\";\nimport { SpellCheckValidatorComponent } from \"./spell-check-validator/spell-check-validator.component\";\nimport { FormsModule } from \"@angular/forms\";\nimport { NgModule } from \"@angular/core\";\n\n@NgModule({\n  imports: [CommonModule, FormsModule],\n  declarations: [SpellCheckValidatorComponent],\n  exports: [SpellCheckValidatorComponent]\n})\nexport class SpellCheckModule {}\n\n","\r\n\r\nexport const COURSES: any = [\r\n\r\n    {\r\n        id: 1,\r\n        description: \"Angular Core Deep Dive\",\r\n        iconUrl: 'https://s3-us-west-1.amazonaws.com/angular-university/course-images/angular-core-in-depth-small.png',\r\n        longDescription: \"A detailed walk-through of the most important part of Angular - the Core and Common modules\",\r\n        lessonsCount: 10,\r\n        category: 'INTERMEDIATE'\r\n    },\r\n    {\r\n        id: 2,\r\n        description: \"RxJs In Practice Course\",\r\n        iconUrl: 'https://s3-us-west-1.amazonaws.com/angular-university/course-images/rxjs-in-practice-course.png',\r\n        longDescription: \"Understand the RxJs Observable pattern, learn the RxJs Operators via practical examples\",\r\n        category: 'BEGINNER',\r\n        lessonsCount: 10\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        description: 'NgRx In Depth',\r\n        longDescription: \"Learn the modern Ngrx Ecosystem, including Store, Effects, Router Store, Ngrx Entity, Dev Tools and Schematics.\",\r\n        iconUrl: 'https://s3-us-west-1.amazonaws.com/angular-university/course-images/angular-ngrx-course.png',\r\n        category: 'ADVANCED'\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        description: \"Angular for Beginners\",\r\n        iconUrl: 'https://angular-academy.s3.amazonaws.com/thumbnails/angular2-for-beginners-small-v2.png',\r\n        longDescription: \"Establish a solid layer of fundamentals, learn what's under the hood of Angular\",\r\n        category: 'BEGINNER',\r\n        lessonsCount: 10\r\n    },\r\n    {\r\n        id: 5,\r\n        description: 'Angular Security Course',\r\n        longDescription: \"Learn Web Security Fundamentals and apply them to defend an Angular / Node Application from multiple types of attacks.\",\r\n        iconUrl: 'https://s3-us-west-1.amazonaws.com/angular-university/course-images/security-cover-small-v2.png',\r\n        category: 'ADVANCED',\r\n        lessonsCount: 11\r\n    },\r\n    {\r\n        id: 6,\r\n        description: 'Angular PWA Course',\r\n        longDescription: \"Learn Angular Progressive Web Applications, build the future of the Web Today.\",\r\n        iconUrl: 'https://s3-us-west-1.amazonaws.com/angular-university/course-images/angular-pwa-course.png',\r\n        category: 'ADVANCED',\r\n        lessonsCount: 8\r\n    },\r\n    {\r\n        id: 7,\r\n        description: 'Angular Advanced Course',\r\n        longDescription: \"Learn Advanced Angular functionality typically used in Library Development. Advanced Components, Directives, Testing, Npm\",\r\n        iconUrl: 'https://angular-academy.s3.amazonaws.com/thumbnails/advanced_angular-small-v3.png',\r\n        category: 'ADVANCED'\r\n    },\r\n    {\r\n        id: 8,\r\n        description: 'Complete Typescript Course',\r\n        longDescription: \"Complete Guide to Typescript From Scratch: Learn the language in-depth and use it to build a Node REST API.\",\r\n        iconUrl: 'https://angular-academy.s3.amazonaws.com/thumbnails/typescript-2-small.png',\r\n        category: 'BEGINNER'\r\n    },\r\n    {\r\n        id: 9,\r\n        description: 'Angular Architecture Course',\r\n        longDescription: \"Learn the core RxJs Observable Pattern as well and many other Design Patterns for building Reactive Angular Applications.\",\r\n        iconUrl: 'https://s3-us-west-1.amazonaws.com/angular-academy/blog/images/rxjs-reactive-patterns-small.png',\r\n        category: 'BEGINNER'\r\n    },\r\n    {\r\n        id: 10,\r\n        description: \"Angular Material Course\",\r\n        iconUrl: \"https://s3-us-west-1.amazonaws.com/angular-university/course-images/material_design.png\",\r\n        longDescription: \"Build Applications with the official Angular Widget Library\",\r\n        category: 'ADVANCED'\r\n    }\r\n\r\n];\r\n\r\n\r\nexport function findCourseById(courseId:number) {\r\n    return COURSES.find(course => course.id == courseId);\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, for easier debugging, you can ignore zone related error\r\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\r\n * below file. Don't forget to comment it out in production mode\r\n * because it will have a performance impact when errors are thrown\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}